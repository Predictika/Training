annot:
  author: Sanjay Mittal
  name: BMWBaseModels.yaml
  start date: Apr10, 2017
  type: ConfigKB
  desc: Base models for Car, Options and Option Pkgs. Also individual Options and OptionPkg models
  topModel: "BMW CarModel"
models:
- model: "BMW Option Pkg"
- model: "BMW Option"
- model: "BMW CarModel"
  parameters:
  - para: Family #name by which parameter is referred to in constraints. must be unique within a model
    dataType: symbolic  #int, float, symbolic, arbit,
    cardinality:  1  # -1 (unlimited), 1 (single val),  0 (arbit), N (for bounded MV para)
    value:
    defValue: 2Series # if given, used during model completion
    domain: [2Series, 3Series, 4Series, 5Series, 6Series, 7Series,X1,X3,X4,X5,X6, M, "BMW i3", "BMW i8" ] # [] of values for symbolic para; (min,max) for num para, None means unlimited
    activityStatus: required

  - para: BodyStyle #name by which parameter is referred to in constraints. must be unique within a model
    dataType: symbolic  #int, float, symbolic, arbit,
    cardinality:  1  # -1 (unlimited), 1 (single val), 0 (arbit), N (for bounded MV para)
    value:  # not required. if given will be assigned when model becomes active
    defValue: Sedan # if given, used during model completion
    domain: [Sedan, Coupe, Convertible, "Gran Coupe", "Sports Activity Vehicle", "Sports Activity Coupe", "Sports Wagon", "Gran Turismo"]
    activityStatus: required

  - para: Fuel #name by which parameter is referred to in constraints. must be unique within a model
    dataType: symbolic  #int, float, symbolic, arbit,
    cardinality:  1  # -1 (unlimited), 1 (single val), 0 (arbit), N (for bounded MV para)
    value:  # not required. if given will be assigned when model becomes active
    defValue: Gasoline # if given, used during model completion
    domain: [Gasoline, Diesel, Electric, iPerformance] # [] iof values for symbolic para; (min,max) for num para, None means unlimited
    activityStatus: required

  - para: FuelEfficiency
    dataType: symbolic
    cardinality: 1
    domain: ["Low:19-25mpg", "Medium:25-32mpg", "High:Over32mpg"]
    activityStatus: required

  - para: DriveTrain #name by which parameter is referred to in constraints. must be unique within a model
    dataType: symbolic  #int, float, symbolic, arbit,
    cardinality:  1  # -1 (unlimited), 1 (single val), 0 (arbit), N (for bounded MV para)
    value:  # not required. if given will be assigned when model becomes active
    defValue:  # if given, used during model completion
    domain: [xDrive, FrontWheel, RearWheel]
    activityStatus: required

  - para: BaseMSRP #name by which parameter is referred to in constraints. must be unique within a model
    dataType: symbolic  #int, float, symbolic, arbit,
    cardinality:  1  # -1 (unlimited), 1 (single val), 0 (arbit), N (for bounded MV para)
    value:  # not required. if given will be assigned when model becomes active
    domain: ["Under 40K", "40K - 60K", "60K-80K", "80K-100K", "100-130K", "Over 130K"] # [] iof values for symbolic para; (min,max) for num para, None means unlimited
    activityStatus: required

  - para: Engine #name by which parameter is referred to in constraints. must be unique within a model
    desc: "Description of the engine"
    dataType: symbolic  #int, float, symbolic, arbit,
    cardinality:  1  # -1 (unlimited), 1 (single val), 0 (arbit), N (for bounded MV para)
    value:  # if given, used during model completion
    domain:
#    activityStatus: required

  - para: HorsePower #name by which parameter is referred to in constraints. must be unique within a model
    dataType: symbolic  #int, float, symbolic, arbit,
    cardinality:  1  # -1 (unlimited), 1 (single val), 0 (arbit), N (for bounded MV para)
    defValue:  # if given, used during model completion
    domain: ["Under 200HP", "200-350HP", "350-500HP", "Over 500HP"]
    activityStatus: required
    ui:
      sortkey: 10.1

  - para: BodyColor
    desc: "Selected by user"
    dataType: symbolic  #int, float, symbolic, arbit,
    cardinality:  1  # -1 (unlimited), 1 (single val), 0 (arbit), N (for bounded MV para)
    value:  # not required. if given will be assigned when model becomes active
    defValue:  # if given, used during model completion
    domain:

  - para: InteriorLeather
    desc: "Selected by user"
    dataType: symbolic  #int, float, symbolic, arbit,
    cardinality:  1  # -1 (unlimited), 1 (single val), 0 (arbit), N (for bounded MV para)
    value:  # not required. if given will be assigned when model becomes active
    defValue:  # if given, used during model completion
    domain:

  - para: InteriorTrim
    desc: "Selected by user"
    dataType: symbolic  #int, float, symbolic, arbit,
    cardinality:  1  # -1 (unlimited), 1 (single val), 0 (arbit), N (for bounded MV para)
    value:  # not required. if given will be assigned when model becomes active
    defValue:  # if given, used during model completion
    domain:

  - para: IntHP
    dataType: int
    cardinality:  1  # -1 (unlimited), 1 (single val), 0 (arbit), N (for bounded MV para)
    value:  # not required. if given will be assigned when model becomes active
    defValue:  # if given, used during model completion
    domain:

  - para: IntFuelEfficiency
    dataType: int
    cardinality:  1  # -1 (unlimited), 1 (single val), 0 (arbit), N (for bounded MV para)
    value:  # not required. if given will be assigned when model becomes active
    defValue:  # if given, used during model completion
    domain:

  - para: IntBaseMSRP
    dataType: int
    cardinality:  1  # -1 (unlimited), 1 (single val), 0 (arbit), N (for bounded MV para)
    value:  # not required. if given will be assigned when model becomes active
    defValue:  # if given, used during model completion
    domain:

  - para: IntOptionsMSRP
    desc: "Computed by engine based on user selections"
    dataType: int
    cardinality:  -1  # -1 (unlimited), 1 (single val), 0 (arbit), N (for bounded MV para)
    value:  # not required. if given will be assigned when model becomes active
    defValue:  # if given, used during model completion
    domain:

  - para: IntTotalMSRP
    desc: "Computed by engine"
    dataType: int
    cardinality:  -1  # -1 (unlimited), 1 (single val), 0 (arbit), N (for bounded MV para)
    value:  # not required. if given will be assigned when model becomes active
    defValue:  # if given, used during model completion
    domain:

  - para: BodyTop
    domain: [SoftTop, HardTop] # [] iof values for symbolic para; (min,max) for num para, None means unlimited

  - para: Options
    desc: "Selected by user"
    dataType: symbolic
    cardinality: -1
    domain: [(model "Performance Options"), (model "Safety Options"), (model "Entertainment Options"), (model "Convenience Options")]

  - para: Packages
    desc: "Selected by user"
    cardinality: -1
    domain: [(model "Cold Weather Package"), (model "Driver Assistance Package"), (model "Driver Assistance Plus"),
    (model "Lighting Package"), (model "Luxury Package"),(model "M Sports Package"), (model "Sports Package"),
    (model "Technology Package"), (model "Track Handling Package"), (model "Dynamic Handling Package"),
    (model "Luxury Seating Package"), (model "Premium Package"), (model "Autobahn Package"), (model "Driver Assistance Plus II"),
    (model "Interior Design Package"), (model "Executive Package"), (model "Luxury Rear Seating Package"),
    (model "Rear Executive Lounge Seating Package")]

- model: "Cold Weather Package"
  baseModel: "BMW Option Pkg"
- model: "Driver Assistance Package"
  baseModel: "BMW Option Pkg"
- model: "Driver Assistance Plus"
  baseModel: "BMW Option Pkg"
- model: "Lighting Package"
  baseModel: "BMW Option Pkg"
- model: "Luxury Package"
  baseModel: "BMW Option Pkg"
- model: "M Sports Package"
  baseModel: "BMW Option Pkg"
- model: "Sports Package"
  baseModel: "BMW Option Pkg"
- model: "Technology Package"
  baseModel: "BMW Option Pkg"
- model: "Track Handling Package"
  baseModel: "BMW Option Pkg"
- model: "Dynamic Handling Package"
  baseModel: "BMW Option Pkg"
- model: "Luxury Seating Package"
  baseModel: "BMW Option Pkg"
- model: "Premium Package"
  baseModel: "BMW Option Pkg"
- model: "Autobahn Package"
  baseModel: "BMW Option Pkg"
- model: "Driver Assistance Plus II"
  baseModel: "BMW Option Pkg"
- model: "Interior Design Package"
  baseModel: "BMW Option Pkg"
- model: "Executive Package"
  baseModel: "BMW Option Pkg"
- model: "Luxury Rear Seating Package"
  baseModel: "BMW Option Pkg"
- model: "Rear Executive Lounge Seating Package"
  baseModel: "BMW Option Pkg"
- model: "Performance Options"
  baseModel: "BMW Option"
- model: "Safety Options"
  baseModel: "BMW Option"
- model: "Entertainment Options"
  baseModel: "BMW Option"
- model: "Convenience Options"
  baseModel: "BMW Option"